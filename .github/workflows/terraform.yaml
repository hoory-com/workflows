name: Terraform

on:
  workflow_call:
    secrets:
      TF_SERVICE_ACCOUNT_DEV:
        required: true
      TF_SERVICE_ACCOUNT_PROD:
        required: true

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      envs: ${{ steps.main.outputs.envs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Main
        id: main
        run: |
          envs=$(jq -Rsc 'split("\n")[:-1]' <<<"$(find vars -name '*.tfvars' | sed 's|vars/||;s|.tfvars||')")
          echo "envs=$envs" >> "$GITHUB_OUTPUT"

  terraform:
    needs: [configure]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env: ${{ fromJSON(needs.configure.outputs.envs) }}
    concurrency: ${{ github.repository }}:${{ github.workflow }}:${{ matrix.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Export Credentials
        run: |
          dev_gcp_sa_path='/tmp/gcp-dev.sa.json'
          prod_gcp_sa_path='/tmp/gcp-prod.sa.json'

          echo '${{ secrets.TF_SERVICE_ACCOUNT_DEV }}' >>$dev_gcp_sa_path
          echo '${{ secrets.TF_SERVICE_ACCOUNT_PROD }}' >>$prod_gcp_sa_path

          echo "GOOGLE_BACKEND_CREDENTIALS=$dev_gcp_sa_path" >>$GITHUB_ENV

          case '${{ matrix.env }}' in
          'dev' | 'stage')
            echo "GOOGLE_CREDENTIALS=$dev_gcp_sa_path" >>$GITHUB_ENV
            ;;
          'prod')
            echo "GOOGLE_CREDENTIALS=$prod_gcp_sa_path" >>$GITHUB_ENV
            ;;
          * )
            echo "No credentials configured for environment '${{ matrix.env }}'"
            exit 1
            ;;
          esac

      - name: Touch override.tf
        run: |
          cat <<EOF > override.tf
          provider "google" {
            region  = "eu-west1"
            zone    = "eu-west1-b"
          }
          terraform {
            backend "gcs" {
              bucket = "tf-state-hoory-com"
              prefix = "${{ github.repository }}"
            }
          }
          EOF

      - uses: hashicorp/setup-terraform@v1

      - name: Terraform init
        run: terraform init

      - name: Terraform select workspace
        run: terraform workspace select '${{ matrix.env }}' || terraform workspace new '${{ matrix.env }}'

      - name: Terraform plan
        run: terraform plan -no-color -out=__plan -var-file='vars/${{ matrix.env }}.tfvars'

      - name: Terraform apply
        run: terraform apply -no-color __plan
        if: ${{ github.ref == 'refs/heads/master' }}
