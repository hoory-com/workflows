name: CI/CD for publishing private packages

on:
  workflow_call:
    secrets:
      GITHUB_PACKAGES_PAT:
        required: true
      PACKAGES_NAME:
        required: true
jobs:
  publish-gpr:
    name: Publish GPR
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        protoc-version: [3.14.0]

    steps:
      # Initialize
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      # Add private packages
      - name: Add private packages PAT
        run: |
          echo "@hoory-com:registry=https://npm.pkg.github.com/
          //npm.pkg.github.com/:_authToken=${{secrets.GITHUB_PACKAGES_PAT}}" > .npmrc
      - name: Extract private package list
        uses: sergeysova/jq-action@v2
        id: privatePackages
        with:
          cmd: 'jq .branches.develop[] private-packages.json -r'
          multiline: true
      - name: Add Private packages
        run: |
          packages="${{ steps.privatePackages.outputs.value }}"
          for package in $packages; do
            version="latest"
            if [[ $package == *":"*  ]]; then
              packageAndVersion=(${package//:/ })
              package=${packageAndVersion[0]}
              version=${packageAndVersion[1]}
            fi
            echo $(jq --arg package "$package" --arg version "$version" '.devDependencies[$package]=$version' package.json | jq . ) > package.json
          done

      # Install
      - name: Install dependencies
        run: yarn install

      # Increase version and push to NPM
      - name: Increase the package version
        run: |
          PREV_VERSION=$(curl \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{secrets.GITHUB_PACKAGES_PAT}}" \
            https://api.github.com/orgs/hoory-com/packages/npm/${{secrets.PACKAGE_NAME}}/versions?per_page=1 | jq '.["0"].name')
          NEXTVERSION=$(echo ${PREV_VERSION} | awk -F. -v OFS=. '{$NF += 1 ; print}' | tr -d '"')
          echo $(jq --arg version "$NEXTVERSION" '.version=$version' package.json | jq . ) > package.json

      # Check format on CI
      - name: Check format
        run: yarn run format:check
        if: github.event.pull_request.merged == false

      # Build the app
      - name: Build package
        run: yarn run build

      # Publish it on NPM
      - name: Publish package
        if: github.event.pull_request.merged == true
        run: cd lib && npm publish
